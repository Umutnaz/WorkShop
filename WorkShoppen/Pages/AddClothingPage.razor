@page "/addclothing"
@using Core
@using WorkShoppen.Service.Interfaces
@inject IClothingService _clothingService
@inject ILoginService loginService
@inject NavigationManager navMan

<h3>Tilføj Tøj</h3>

@if (currentUser == null)
{
    <p>Du skal være logget ind for at tilføje tøj.</p>
}
else
{
    <EditForm EditContext="EditContext" OnSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label for="name">Navn:</label>
            <InputText id="name" @bind-Value="_newClothing.Name" />
        </div>
        <div>
            <label for="description">Beskrivelse:</label>
            <InputText id="description" @bind-Value="_newClothing.Description" />
        </div>
        <div>
            <label for="size">Størrelse:</label>
            <InputText id="size" @bind-Value="_newClothing.Size" />
        </div>
        <div>
            <label for="type">Type:</label>
            <InputSelect id="type" @bind-Value="_newClothing.Type">
                <option value=""></option>
                @foreach (var s in types)
                {
                    <option value="@s">@s</option>
                }
            </InputSelect>
        </div>
        <div>
            <label for="color">Farve:</label>
            <InputText id="color" @bind-Value="_newClothing.Color" />
        </div>

        <button type="submit">Tilføj Tøj</button>
    </EditForm>
}

@code {
    private Clothing _newClothing;
    private EditContext EditContext;
    private User? currentUser;

    private string[] types = new[]
    {
        "sko", "bukser", "støvler"
    };

    protected override async Task OnInitializedAsync()
    {
        currentUser = await loginService.GetUserLoggedIn();
        if (currentUser == null)
        {
            navMan.NavigateTo("login/test");
        }

        _newClothing = new Clothing();
        EditContext = new EditContext(_newClothing);
    }

    private async Task AddClothing()
    {
        _newClothing.ClothingId = Random.Shared.Next(1, int.MaxValue);
        // Tilføj tøjet til den loggede bruger
        _clothingService.AddClothing(_newClothing, currentUser.UserId);
        navMan.NavigateTo("/myclothing"); // Redirect til myclothing page efter tilføjelse
    }

    private void HandleSubmit()
    {
        if (EditContext.Validate())
        {
            AddClothing();
        }
    }
}